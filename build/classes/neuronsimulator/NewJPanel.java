/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package neuronsimulator;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.util.Random;

/**
 *
 * @author rasty
 */
public class NewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form NewJPanel
     */
    public NewJPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

public void paintComponent(Graphics g)
    {
        super.paintComponent(g);
        Graphics2D g2 = (Graphics2D) g;

        Neuron[] neuronList = NetworkInitialization.getNeuronList();
        double mu=NetworkInitialization.getMu();
        double [] newUvalues = new double[neuronList.length];
        this.setBackground(Color.WHITE);
        
        
        //create the axons of the diagram
        g2.setColor(new Color(0, 0, 0));
        g2.setStroke(new BasicStroke(3));
        g2.drawLine(30, 30 ,30, 400);
        g2.drawLine(15, 380 ,1000,380);
  
        
        
        
        g2.setColor(new Color(0, 0, 255));
        

        
        //calculates and draws the new potential of each neuron
        for (int i=0;i<neuronList.length;i++){
            newUvalues[i]=neuronList[i].calculateNewPotential(mu);
            g2.drawOval((neuronList[i].place*3+32),((int)(300*(1.0-newUvalues[i]))+30),2, 2);
            g2.fillOval((neuronList[i].place*3+32),((int)(300*(1.0-newUvalues[i]))+30),2, 2);
         //   System.out.println(newUvalues[i]);
        }
        
        //updates the u values of each neuron
        for (int i=0;i<neuronList.length;i++){
          neuronList[i].updateU(newUvalues[i]);
        }
    }   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
